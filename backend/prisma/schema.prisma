generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Many-to-many relationship with Course
  courses StudentCourse[]

  @@map("students")
}

model Course {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Many-to-many relationship with Student
  students StudentCourse[]

  // One-to-many relationship with Assignment
  assignments Assignment[]

  @@map("courses")
}

// Join table for the many-to-many relationship between Student and Course
model StudentCourse {
  studentId String
  courseId  String
  assignedAt DateTime @default(now())

  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  course  Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@id([studentId, courseId])
  @@map("student_courses")
}

model Assignment {
  id          String   @id @default(uuid())
  title       String
  description String?
  dueDate     DateTime
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Many-to-one relationship with Course
  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  @@map("assignments")
}
